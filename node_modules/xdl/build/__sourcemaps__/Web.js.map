{"version":3,"sources":["Web.js"],"names":["async","projectRoot","options","hasWebSupport","await","hasWebSupportAsync","logWebSetup","success","let","url","UrlUtils","constructWebAppUrlAsync","opn","wait","e","Logger","global","error","message","openProjectAsync","exp","readConfigJsonAsync","isWebConfigured","platforms","includes","getWebSetupLogs","appJsonRules","chalk","white","whiteBright","bold","green","packageJsonRules","red"],"mappings":";;;;;;;;+BAMOA,WAAgCC,WAAhCD,EAA6CE,OAA7CF,EAAsD;AAC3D,UAAMG,gBAAgBC,MAAMC,mBAAmBJ,WAAnBI,CAA5B;AACA,QAAI,CAACF,aAAL,EAAoB;AAClBG;AACA,aAAO,EAAEC,SAAS,KAAX,EAAP;AACF;AACA,QAAI;AACFC,UAAIC,MAAML,MAAMM,gCAASC,uBAATD,CAAiCT,WAAjCS,EAA8CR,OAA9CQ,CAAhBF;AACAI,yCAAIH,GAAJG,EAAS,EAAEC,MAAM,KAAR,EAATD;AACA,aAAO,EAAEL,SAAS,IAAX,EAAiBE,GAAjB,EAAP;AACF,KAJA,CAIE,OAAOK,CAAP,EAAU;AACVC,0CAAOC,MAAPD,CAAcE,KAAdF,CAAqB,kCAAiCD,EAAEI,OAAQ,EAAhEH;AACA,aAAO,EAAER,SAAS,KAAX,EAAkBU,OAAOH,CAAzB,EAAP;AACF;AACF,G;;kBAdsBK,gB;;;;;;gCAoBfnB,WAAkCC,WAAlCD,EAA+C;AACpD,UAAM,EAAEoB,GAAF,KAAUhB,MAAMiB,iEAAoBpB,WAApBoB,CAAtB;AACA,UAAMC,kBAAkBF,IAAIG,SAAJH,CAAcI,QAAdJ,CAAuB,KAAvBA,CAAxB;AACA,WAAOE,eAAP;AACF,G;;kBAJsBjB,kB;;;;;QAJNC,W,GAAAA,W;;;;AAtBhB;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;;;;;AAkBO,SAASA,WAAT,GAAuB;AAC5BS,sCAAOC,MAAPD,CAAcE,KAAdF,CAAoBU,iBAApBV;AACF;;AAQA,SAASU,eAAT,GAA2B;AACzB,QAAMC,eAAeC,kCAAMC,KAAND,CAClB;IACDA,kCAAME,WAANF,CAAkBG,IAAlBH,CAAwB,UAAxBA,CAAmC;;;;;IAKnCA,kCAAMI,KAANJ,CAAYG,IAAZH,CAAkB,cAAlBA,CAAiC;;IAPdA,CAArB;AAWA,QAAMK,mBAAmBL,kCAAMC,KAAND,CACtB;IACDA,kCAAME,WAANF,CAAkBG,IAAlBH,CAAwB,cAAxBA,CAAuC;;;IAGvCA,kCAAMI,KAANJ,CAAYG,IAAZH,CAAkB,uCAAlBA,CAA0D;IAC1DA,kCAAMI,KAANJ,CAAYG,IAAZH,CAAkB,gCAAlBA,CAAmD;IACnDA,kCAAMI,KAANJ,CAAYG,IAAZH,CAAkB,+BAAlBA,CAAkD;;;IAGlDA,kCAAMI,KAANJ,CAAYG,IAAZH,CAAkB,sCAAlBA,CAAyD;;IAVlCA,CAAzB;AAcA,SAAQ,GAAEA,kCAAMM,GAANN,CAAUG,IAAVH,CAAe,oDAAfA,CAAqE;IAC7EK,gBAAiB;MACfN,YAAa,EAFjB;AAGF","file":"../Web.js","sourcesContent":["import opn from 'opn';\nimport chalk from 'chalk';\nimport Logger from './Logger';\nimport * as UrlUtils from './UrlUtils';\nimport { readConfigJsonAsync } from './project/ProjectUtils';\n\nexport async function openProjectAsync(projectRoot, options) {\n  const hasWebSupport = await hasWebSupportAsync(projectRoot);\n  if (!hasWebSupport) {\n    logWebSetup();\n    return { success: false };\n  }\n  try {\n    let url = await UrlUtils.constructWebAppUrlAsync(projectRoot, options);\n    opn(url, { wait: false });\n    return { success: true, url };\n  } catch (e) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n\nexport function logWebSetup() {\n  Logger.global.error(getWebSetupLogs());\n}\n\nexport async function hasWebSupportAsync(projectRoot) {\n  const { exp } = await readConfigJsonAsync(projectRoot);\n  const isWebConfigured = exp.platforms.includes('web');\n  return isWebConfigured;\n}\n\nfunction getWebSetupLogs() {\n  const appJsonRules = chalk.white(\n    `\n  ${chalk.whiteBright.bold(`app.json`)}\n  {\n    \"platforms\": [\n      \"android\",\n      \"ios\",\n  ${chalk.green.bold(`+      \"web\"`)}\n    ]\n  }`\n  );\n  const packageJsonRules = chalk.white(\n    `\n  ${chalk.whiteBright.bold(`package.json`)}\n  {\n    \"dependencies\": {\n  ${chalk.green.bold(`+      \"react-native-web\": \"^0.11.0\",`)}\n  ${chalk.green.bold(`+      \"react-art\": \"^16.7.0\",`)}\n  ${chalk.green.bold(`+      \"react-dom\": \"^16.7.0\"`)}\n    },\n    \"devDependencies\": {\n  ${chalk.green.bold(`+      \"babel-preset-expo\": \"^5.0.0\"`)}\n    }\n  }`\n  );\n  return `${chalk.red.bold('Your project is not configured to support web yet!')}\n  ${packageJsonRules}\n    ${appJsonRules}`;\n}\n"],"sourceRoot":"/xdl@53.1.6/src"}